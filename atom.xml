<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://yyhhhhhhhhh.github.io/atom.xml" rel="self"/>
  
  <link href="https://yyhhhhhhhhh.github.io/"/>
  <updated>2021-12-08T10:09:19.000Z</updated>
  <id>https://yyhhhhhhhhh.github.io/</id>
  
  <author>
    <name>Lyh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见文件文件头文件尾格式总结及各类文件头</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/12/08/%E5%B8%B8%E8%A7%81%E6%96%87%E4%BB%B6%E6%96%87%E4%BB%B6%E5%A4%B4%E6%96%87%E4%BB%B6%E5%B0%BE%E6%A0%BC%E5%BC%8F%E6%80%BB%E7%BB%93%E5%8F%8A%E5%90%84%E7%B1%BB%E6%96%87%E4%BB%B6%E5%A4%B4/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/12/08/%E5%B8%B8%E8%A7%81%E6%96%87%E4%BB%B6%E6%96%87%E4%BB%B6%E5%A4%B4%E6%96%87%E4%BB%B6%E5%B0%BE%E6%A0%BC%E5%BC%8F%E6%80%BB%E7%BB%93%E5%8F%8A%E5%90%84%E7%B1%BB%E6%96%87%E4%BB%B6%E5%A4%B4/</id>
    <published>2021-12-08T10:02:45.000Z</published>
    <updated>2021-12-08T10:09:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>JPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　<br>PNG (png)，                       　　 文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82<br>GIF (gif)，                           　　文件头：47494638　　　　　　　　　　　　　　　　　　　　　　文件尾：00 3B                                                                 ZIP Archive (zip)，                     文件头：504B0304　　　　　　　　　　　　　　　　　　　　　　文件尾：50 4B</p><p>TIFF (tif)，                           　  文件头：49492A00　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Windows Bitmap (bmp)，      　  文件头：424D　　　　　　　　　　　　　　　　　　　　　　　　 文件尾：<br>CAD (dwg)，                        　  文件头：41433130　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Adobe Photoshop (psd)，          文件头：38425053　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Rich Text Format (rtf)，             文件头：7B5C727466　　　　　　　　　　　　　　　　　　　　  文件尾：<br>XML (xml)，                              文件头：3C3F786D6C　　　　　　　　　　　　　　　　　　　　 文件尾：<br>HTML (html)，                           文件头：68746D6C3E<br>Email [thorough only] (eml)，     文件头：44656C69766572792D646174653A<br>Outlook Express (dbx)，            文件头：CFAD12FEC5FD746F<br>Outlook (pst)，                         文件头：2142444E<br>MS Word/Excel (xls.or.doc)，      文件头：D0CF11E0<br>MS Access (mdb)，                    文件头：5374616E64617264204A<br>WordPerfect (wpd)，                  文件头：FF575043<br>Adobe Acrobat (pdf)，               文件头：255044462D312E<br>Quicken (qdf)，                         文件头：AC9EBD8F<br>Windows Password (pwl)，         文件头：E3828596</p><p>RAR Archive (rar)，                    文件头：52617221<br>Wave (wav)，                            文件头：57415645<br>AVI (avi)，                                 文件头：41564920<br>Real Audio (ram)，                     文件头：2E7261FD<br>Real Media (rm)，                       文件头：2E524D46<br>MPEG (mpg)，                           文件头：000001BA<br>MPEG (mpg)，                           文件头：000001B3<br>Quicktime (mov)，                     文件头：6D6F6F76<br>Windows Media (asf)，               文件头：3026B2758E66CF11<br>MIDI (mid)，                              文件头：4D546864</p><p>各类文件的文件头标志</p><p>1、从Ultra－edit-32中提取出来的</p><p>附件:文件格式分析器</p><p>JPEG (jpg)，文件头：FFD8FF</p><p>PNG (png)，文件头：89504E47</p><p>GIF (gif)，文件头：47494638</p><p>TIFF (tif)，文件头：49492A00</p><p>Windows Bitmap (bmp)，文件头：424D</p><p>CAD (dwg)，文件头：41433130</p><p>Adobe Photoshop (psd)，文件头：38425053</p><p>Rich Text Format (rtf)，文件头：7B5C727466</p><p>XML (xml)，文件头：3C3F786D6C</p><p>HTML (html)，文件头：68746D6C3E</p><p>Email [thorough only] (eml)，文件头：44656C69766572792D646174653A</p><p>Outlook Express (dbx)，文件头：CFAD12FEC5FD746F</p><p>Outlook (pst)，文件头：2142444E</p><p>MS Word/Excel (xls.or.doc)，文件头：D0CF11E0</p><p>MS Access (mdb)，文件头：5374616E64617264204A</p><p>WordPerfect (wpd)，文件头：FF575043</p><p>Postscript (eps.or.ps)，文件头：252150532D41646F6265</p><p>Adobe Acrobat (pdf)，文件头：255044462D312E</p><p>Quicken (qdf)，文件头：AC9EBD8F</p><p>Windows Password (pwl)，文件头：E3828596</p><p>ZIP Archive (zip)，文件头：504B0304</p><p>RAR Archive (rar)，文件头：52617221</p><p>Wave (wav)，文件头：57415645</p><p>AVI (avi)，文件头：41564920</p><p>Real Audio (ram)，文件头：2E7261FD</p><p>Real Media (rm)，文件头：2E524D46</p><p>MPEG (mpg)，文件头：000001BA</p><p>MPEG (mpg)，文件头：000001B3</p><p>Quicktime (mov)，文件头：6D6F6F76</p><p>Windows Media (asf)，文件头：3026B2758E66CF11</p><p>MIDI (mid)，文件头：4D546864</p><p>2、从winhex中取出的文件头列表</p><p>File Type ExtensionsHeader</p><p>JPEG jpg;jpeg 0xFFD8FF</p><p>PNG png 0x89504E470D0A1A0A</p><p>GIF gif GIF8</p><p>TIFF tif;tiff 0x49492A00</p><p>TIFF tif;tiff 0x4D4D002A</p><p>Bit map bmp BM</p><p>AOL ART art 0x4A47040E000000</p><p>AOL ART art 0x4A47030E000000</p><p>PC Paintbrush pcx 0x0A050108</p><p>Graphics Metafile wmf 0xD7CDC69A</p><p>Graphics Metafile wmf 0x01000900</p><p>Graphics Metafile wmf 0x02000900</p><p>Enhanced Metafile emf 0x0100000058000000</p><p>Corel Draw cdr CDR</p><p>CAD dwg 0x41433130</p><p>Adobe Photoshop psd 8BPS</p><p>Rich Text Format rtf rtf</p><p>XML xml</p><p>HTML html;htm;PHP;php3;php4;phtml;shtml type</p><p>Email eml Delivery-date:</p><p>Outlook Express dbx 0xCFAD12FE</p><p>Outlookpst!BDN</p><p>MS Office/OLE2doc;xls;dot;ppt;xla;ppa;pps;pot;msi;sdw;db 0xD0CF11E0A1B11AE1</p><p>MS Access mdb;mda;mde;mdt Standard J</p><p>WordPerfect wpd 0xFF575043</p><p>OpenOffice Writer sxw writer</p><p>OpenOffice Calc sxc calc</p><p>OpenOffice Math sxm math</p><p>OpenOffice Impress sxi impress</p><p>OpenOffice Draw sxd draw</p><p>Adobe FrameMaker fm &lt;MAKERFILE</p><p>PostScript eps.or.ps;ps;eps %!PS-Adobe</p><p>Adobe Acrobat pdf %PDF-1.</p><p>Quicken qdf 0xAC9EBD8F</p><p>QuickBooks Backup qbb 0x458600000600</p><p>Sage sly.or.srt.or.slt;sly;srt;slt0x53520100</p><p>Sage Backup 1 SAGEBACKUP</p><p>Lotus WordPro v9 lwp 0x576F726450726F</p><p>Lotus 123 v9 123 0x00001A00051004</p><p>Lotus 123 v5 wk4 0x00001A0002100400</p><p>Lotus 123 v3 wk3 0x00001A0000100400</p><p>Lotus 123 v1 wk1 0x2000604060</p><p>Windows Password pwl 0xE3828596</p><p>ZIP Archive zip;jar 0x504B0304</p><p>ZIP Archive (outdated) zip 0x504B3030</p><p>RAR Archive rar Rar!</p><p>GZ Archive gz;tgz 0x1F8B08</p><p>BZIP Archive bz2 BZh</p><p>ARJ Archive arj 0x60EA</p><p>7-ZIP Archive 7z 7z集’</p><p>Wave wav WAVE</p><p>AVI avi AVI</p><p>Real Audio ram;ra .ra?0</p><p>Real Media rm .RMF</p><p>MPEG mpg;mpeg 0x000001BA</p><p>MPEG mpg;mpeg 0x000001B3</p><p>Quicktime mov moov</p><p>Windows Media asf 0x3026B2758E66CF11</p><p>MIDI mid MThd</p><p>Win32 Executable exe;dll;drv;vxd;sys;ocx;vbxMZ</p><p>Win16 Executable exe;dll;drv;vxd;sys;ocx;vbxMZ</p><p>ELF Executable elf;; 0x7F454C4601010100</p><p>各种文件类型文件头标志位详细列表</p><p>FFD8FFFE00, .JPEG;.JPE;.JPG, “JPGGraphic File”</p><p>FFD8FFE000, .JPEG;.JPE;.JPG, “JPGGraphic File”</p><p>474946383961, .gif, “GIF 89A”</p><p>474946383761, .gif, “GIF 87A”</p><p>424D, .bmp, “Windows Bitmap”</p><p>4D5A,.exe;.com;.386;.ax;.acm;.sys;.dll;.drv;.flt;.fon;.ocx;.scr;.lrc;.vxd;</p><p>.cpl;.x32, “Executable File”</p><p>504B0304, .zip, “Zip Compressed”</p><p>3A42617365, .cnt, “”</p><p>D0CF11E0A1B11AE1,.doc;.xls;.xlt;.ppt;.apr, “MS Compound Document v1 or Lotus Approach APRfile”</p><p>0100000058000000, .emf, “”</p><p>03000000C466C456, .evt, “”</p><p>3F5F0300, .gid;.hlp;.lhp, “Windows HelpFile”</p><p>1F8B08, .gz, “GZ Compressed File”</p><p>28546869732066696C65, .hqx, “”</p><p>0000010000, .ico, “Icon File”</p><p>4C000000011402, .lnk, “Windows LinkFile”</p><p>25504446, .pdf, “Adobe PDF File”</p><p>5245474544495434, .reg, “”</p><p>7B5C727466,.rtf, “Rich Text Format File”</p><p>lh, .lzh, “Lz compression file”</p><p>MThd, .mid, “”</p><p>0A050108, .pcx, “”</p><p>25215053, .eps, “Adobe EPS File”</p><p>2112, .ain, “AIN Archive File”</p><p>1A02, .arc, “ARC/PKPAK Compressed 1”</p><p>1A03, .arc, “ARC/PKPAK Compressed 2”</p><p>1A04, .arc, “ARC/PKPAK Compressed 3”</p><p>1A08, .arc, “ARC/PKPAK Compressed 4”</p><p>1A09, .arc, “ARC/PKPAK Compressed 5”</p><p>60EA, .arj, “ARJ Compressed”</p><p>41564920, .avi, “Audio Video Interleave(AVI)”</p><p>425A68, .bz;.bz2, “Bzip Archive”</p><p>49536328, .cab, “Cabinet File”</p><p>4C01, .obj, “Compiled Object Module”</p><p>303730373037, .tar;.cpio, “CPIO ArchiveFile”</p><p>4352555348, .cru;.crush, “CRUSH ArchiveFile”</p><p>3ADE68B1, .dcx, “DCX Graphic File”</p><p>1F8B, .gz;.tar;.tgz, “Gzip ArchiveFile”</p><p>91334846, .hap, “HAP Archive File”</p><p>3C68746D6C3E,.htm;.html, “HyperText Markup Language 1”</p><p>3C48544D4C3E,.htm;.html, “HyperText Markup Language 2”</p><p>3C21444F4354, .htm;.html, “HyperText MarkupLanguage 3”</p><p>100, .ico, “ICON File”</p><p>5F27A889, .jar, “JAR Archive File”</p><p>2D6C68352D,.lha, “LHA Compressed”</p><p>20006040600, .wk1;.wks, “Lotus 123 v1 Worksheet”</p><p>00001A0007800100, .fm3, “Lotus 123 v3 FMTfile”</p><p>00001A0000100400, .wk3, “Lotus 123 v3Worksheet”</p><p>20006800200, .fmt, “Lotus 123 v4 FMTfile”</p><p>00001A0002100400, .wk4, “Lotus 123 v5”</p><p>5B7665725D, .ami, “Lotus Ami Pro”</p><p>300000041505052, .adx, “Lotus ApproachADX file”</p><p>1A0000030000, .nsf;.ntf, “Lotus NotesDatabase/Template”</p><p>4D47582069747064, .ds4, “MicrografixDesigner 4”</p><p>4D534346, .cab, “Microsoft CAB FileFormat”</p><p>4D546864, .mid, “Midi Audio File”</p><p>000001B3, .mpg;.mpeg, “MPEG Movie”</p><p>0902060000001000B9045C00, .xls, “MS Excel v2”</p><p>0904060000001000F6055C00, .xls, “MS Excel v4”</p><p>7FFE340A,.doc, “MS Word”</p><p>1234567890FF, .doc, “MS Word 6.0”</p><p>31BE000000AB0000, .doc, “MS Word forDOS 6.0”</p><p>1A00000300001100, .nsf, “NotesDatabase”</p><p>7E424B00, .psp, “PaintShop Pro Image File”</p><p>504B0304, .zip, “PKZIP Compressed”</p><p>89504E470D0A, .png, “PNG Image File”</p><p>6D646174, .mov, “QuickTime Movie”</p><p>6D646174, .qt, “Quicktime MovieFile”</p><p>52617221, .rar, “RAR Archive File”</p><p>2E7261FD, .ra;.ram, “Real AudioFile”</p><p>EDABEEDB, .rpm, “RPM Archive File”</p><p>2E736E64, .au, “SoundMachine AudioFile”</p><p>53495421, .sit, “Stuffit v1 ArchiveFile”</p><p>53747566664974, .sit, “Stuffit v5Archive File”</p><p>1F9D, .z, “TAR Compressed ArchiveFile”</p><p>49492A, .tif;.tiff, “TIFF (Intel)”</p><p>4D4D2A,.tif;.tiff, “TIFF (Motorola)”</p><p>554641, .ufa, “UFA Archive File”</p><p>57415645666D74, .wav, “Wave Files”</p><p>D7CDC69A,.wmf, “Windows Meta File”</p><p>4C000000, .lnk, “Windows Shortcut (LinkFile)”</p><p>504B3030504B0304, .zip, “WINZIPCompressed”</p><p>FF575047, .wpg, “WordPerfectGraphics”</p><p>FF575043, .wp, “WordPerfect v5 orv6”</p><p>3C3F786D6C,.xml, “XML Document”</p><p>FFFE3C0052004F004F0054005300540055004200, .xml, “XML Document(ROOTSTUB)”</p><p>3C21454E54495459, .dtd, “XML DTD”</p><p>5A4F4F20, .zoo, “ZOO Archive File”</p><p>转载自：</p><p><a class="link"   href="http://www.cnblogs.com/lwy-kitty/p/3928317.html" >原文链接<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://blog.csdn.net/zhembrace/article/details/52717559" >原文链接<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　&lt;br&gt;PNG (png)，                       　　 文件</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>buumisc</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/12/08/buumisc/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/12/08/buumisc/</id>
    <published>2021-12-08T09:39:30.000Z</published>
    <updated>2021-12-09T05:40:05.423Z</updated>
    
    <content type="html"><![CDATA[<p>#签到<br>签到就不多说了。</p><p>#二维码<br>工具：winhex，QR search（一款功能强大的<b>二维码识别软件</b>，主要集区域解码，全屏解码，摄像头拍照解码以及二维码美化等功能为一体），虚拟机</p><p>打开二维码图片，用手机扫了扫，不会真有人以为secret is here是flag吧？（手动狗头）hh。然后用winhex查看图片.看别人的博客有先用QR search扫描一下二维码的，就是可以查看二维码的信息）</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-08-175631.1lgxwkcfaluo.png"                      alt="lyh"                >然后就在里面看到了隐藏文件，然后下面总结了几种解题方法，有一些是从别人的wp看的，感觉也很不错。</p><p>binwalk分离。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#签到&lt;br&gt;签到就不多说了。&lt;/p&gt;
&lt;p&gt;#二维码&lt;br&gt;工具：winhex，QR search（一款功能强大的&lt;b&gt;二维码识别软件&lt;/b&gt;，主要集区域解码，全屏解码，摄像头拍照解码以及二维码美化等功能为一体），虚拟机&lt;/p&gt;
&lt;p&gt;打开二维码图片，用手机扫了扫，不会真</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/12/08/BUUCTF/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/12/08/BUUCTF/</id>
    <published>2021-12-08T09:38:08.000Z</published>
    <updated>2021-12-08T09:39:56.798Z</updated>
    
    <content type="html"><![CDATA[<p>#BUUCTF题解<br>misc:<a href="/2021/12/08/buumisc/" title="[buumisc]">[buumisc]</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#BUUCTF题解&lt;br&gt;misc:&lt;a href=&quot;/2021/12/08/buumisc/&quot; title=&quot;[buumisc]&quot;&gt;[buumisc]&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo配置</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/12/06/hexo%E9%85%8D%E7%BD%AE/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/12/06/hexo%E9%85%8D%E7%BD%AE/</id>
    <published>2021-12-06T14:10:51.000Z</published>
    <updated>2021-12-07T05:02:52.128Z</updated>
    
    <content type="html"><![CDATA[<p>#记录一下hexo配置出现的错误。。（避坑）<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-221206.526420trz6w0.png"                      alt="lyh"                >额。仅仅因为把feed放在了deploy的下面，就给我报错呜呜呜，咱也不懂这是啥语言，咱也不懂怎么配置的呜呜呜~~~，所以不要乱放啊<br>而且有时候命令行报错的时候Bash不报错，bash报错的时候命令行不报错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#记录一下hexo配置出现的错误。。（避坑）&lt;br&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                     data-s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>misc</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/12/06/misc/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/12/06/misc/</id>
    <published>2021-12-06T03:33:16.000Z</published>
    <updated>2021-12-09T07:54:47.536Z</updated>
    
    <content type="html"><![CDATA[<p>#如来十三掌<br>打开网址,发现有如下文字<br>如来十三掌<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-111219.3b85s295jta0.png"                      alt="wochao"                ><br>，打开<a class="link"   href="https://www.keyfc.net/bbs/tools/tudoucode.aspx" >与佛论禅<i class="fas fa-external-link-alt"></i></a>.然后注意要加上佛曰：或如是我闻：，冒号都是中文的。复制放在下面的文本框里。得到一行代码：MzkuM3gvMUAwnzuvn3cgozMlMTuvqzAenJchMUAeqzWenzEmLJW9<br>然后发现这行代码有大小写字母还有数字，同时长度也是4的倍数。base64直接解密。十三也可能会导致往rot13方向想。<br>base64的特征：base64由大写字母（A-Z），小写字母（a-z），数字（0-9），+/组成。如果字符不足会用=补齐，特征很明显。</p><p>#give you flag<br>打开文件，发现后缀是gif动图，然后用stegsolve（图片隐写神器）打开<br><a class="link"   href="http://www.caesum.com/handbook/Stegsolve.jar" >stegsolve下载地址<i class="fas fa-external-link-alt"></i></a>这个是需要安装Java，然后配置环境变量才能使用的。具体网上自己搜吧。。</p><p>然后用stegsolve打开，点击Analyse，使用Frame Browser动图分解，发现如下二维码<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-105143.7fosbjtc2c80.png"                      alt="wochao"                ><br>使用画图软件<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/21107801-62284a54709b2ac5.40wu3gocd7q0.webp"                      alt="111"                >补一下就行，我的画图升到win11了，画图不太好用。。。</p><p>然后是一点二维码的知识<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-04-225406.5xmqsd8xl0k0.png"                      alt="222"                ><br><a class="link"   href="https://blog.csdn.net/ajianyingxiaoqinghan/article/details/78837864" >二维码的一些知识，想看的可以看看<i class="fas fa-external-link-alt"></i></a></p><p>#stegano<br>stegano<br>打开附件，发现是一个pdf文件<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/Lyhz.2j833jjppnc0.png"                      alt="stegano"                ><br>然后就发现和招新赛那个题很像。ctrl+A全选，复制到word里面，</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-095214.24kwr33jn28w.png"                      alt="stgano"                ></p><p>然后就发现AB的字符串。首先想到的是培根密码，但是培根密码都是五个一组来替换的。又想到了摩斯密码，有两种情况，将A替换成.B替换成-或者反过来。<br>（替换可以使用word里面的替换功能，我以前笨的一个个换的害）<br>放入<a class="link"   href="http://moersima.00cha.net/" >摩斯密码在线解密网站即可<i class="fas fa-external-link-alt"></i></a><br>flag就不放了。</p><p>反思：密密麻麻的给我一种凯斯密码的错觉。。</p><p>#坚持60s<br>思路：</p><p>打开文件发现是一个小游戏，我们可以通过某些手段通关或者分析游戏文件来获得flag（我还玩了几把这个。）</p><p>知识点：<br>考察对jar文件的反编译能力</p><p>用360压缩打开附件<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-105852.38t49ebf23w0.png"                      alt="1"                ><br>用IDEA打开PlaneGameFrame类</p><p>发现如下代码<img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-110145.69brxy2bis40.png"                      alt="2"                ><br>显然是base64解密，<a class="link"   href="https://base64.supfree.net/" >base64加解密<i class="fas fa-external-link-alt"></i></a>即可。</p><p>反思：<br>反编译能力，这个类就是通过switch来判断坚持的时长，所以找到源码即可解密。</p><p>#gif<br>下载压缩包打开，发现有104张图片<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-111557.gye79nlxhlk.png"                      alt="3"                ><br>然后用winhex查看一下图片的代码<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-123647.19y0irgy054w.png"                      alt="l"                ><br>发现都是jpg形式，然后观察到颜色只有两个，就想到了密码，因为我感觉misc好多与密码相关的。自然而然就想到了密码。只有两种编码，就想到了0和1.而且图片有104张，刚好是8的倍数！</p><p>然后通过python脚本把图片识别出来<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-132439.6e71il6ifow0.png"                      alt="y"                ><br>得到字符串01100110011011000110000101100111011110110100011001110101010011100101111101100111011010010100011001111101<br>然后放到二进制转文本（其实还是要八个一组十六进制转文本）<br>注意两串数之间只能有一个空格<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-132838.2vpdl05zzo00.png"                      alt="h"                ></p><p>#掀桌子<br>首先打开题目，发现只给了一串密文，所以肯定是密码方面的让我们解密的c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2</p><p>观察密文特征，有0-9，a-f，不难猜测与十六进制有关。我们又知道两位十六进制可以显示一个字节（）,所以可以通过脚本显示ASCII码<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-151544.55685352mhc0.png"                      alt="l"                ><br>但是的出来的却是这个Èé¬ ÆòåóèÄïç¡ Ôèå æìáç éóº èêúãùäêúâêäãêëúëãõçéóäãèêùêóâäæò。。查了一下ASCII码，发现是128以后的。。而ASCII码的范围是0-127，所以对128取余。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-151851.x5znvrslopc.png"                                     ><br>即可得到flag。</p><p>通过这道题，我学到了ASCII码。我们用到的ASCII码一般都是0-127即7位的ASCII码，但是128-255是一些扩展型的ASCII码。学到了学到了。</p><p>#ext3<br><font color=Blue><br>先看题目的描述，linux系统光盘，所以这应该就是一个Linux文件，flag肯定就藏在其中。用360压缩打开该文件</font><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-193722.6lgyfgj7d8w0.png"                      alt="1"                ><br>直接搜索flag就找到了flag.txt..<br>打开得到ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0=<br><a class="link"   href="http://tool.chinaz.com/Tools/Base64.aspx" >base64解码<i class="fas fa-external-link-alt"></i></a>即可。我看网上其他wp好像都挺复杂的。。还是我懂得太少了，一题多解多发散！</p><p>反思<br>有关Linux文件系统的题不一定要用Linux系统环境来做，Windows照样可以做。</p><p>#SimpleRaR<br>orz,这种题型实在没头绪（指该去大佬的blog取精了hh）第一篇blog用的WinRAR会提示压缩包里面有损坏的文件，但是3608行。。这时候就该用到我们的winHex神器啦！（自行百度下载）</p><p>这里说明一下winhex的用处。winhex是一个专门用来对付各种日常紧急情况的工具。（说了和没说一样。）<br>它可以用来检查和修复各种文件，恢复删除文件，硬盘损坏造成的数据丢失等。同时它还可以让你看到其他程序隐藏起来的文件和数据（比如图片隐藏）</p><p>用winHex打开压缩包，<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-193722.6lgyfgj7d8w0.png"                      alt="lyh"                >如果眼睛不好使看不到secret.png的话，就CTRL+f搜索吧（搜索png）。然后flag.txt结束之后就是png的文件了。应该是A8 3C 7A（从别人的wp看到的hh）。这里我们就要修复这个png文件了，涉及到RAR的文件结构，从网上找的，（如果有侵权请联系我，我立马删除！）</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-221543.5fbbwk13oko0.png"                      alt="lyh"                ><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-221555.386gz8yndww0.png"                      alt="lyh"                ></p><p>至此我们知道了文件头应该是十六进制的74，改成74即可，修改后重新打开压缩包，就会发现一个空白图片，然后用我们的图片隐写神器stegsolve，打开图片（这种杂项的题）<a class="link"   href="https://www.cnblogs.com/cat47/p/11483478.html" >这是stegsolve的具体使用方法<i class="fas fa-external-link-alt"></i></a>，然后点击右箭头找找就找到了一张二维码的半张图片。然后它又提示了我们ps：双图层，这个没了解过，就去网上找相关的知识（指wp）</p><p>额。ps还没下载。。这个双图层的意思就是你可以使用ps将这个双图层分离，然后使用stegsolve可以找到二维码的上半部分和下半部分，拼在一起就行了。还要补习ps知识。。库里奥（哭辽~）</p><p>发现看别人的博客收获还蛮多的，我的建议是如果一道题不会，不要只打开一篇博客看，多看几篇，你会收获新东西的嘿嘿嘿</p><p>将secret.png继续用winHex打开，发现是gif后缀，把后缀改为gif之后放入ps，就会发现两个空白图层了。将两个空白图层提取出来，用stegsolve打开，不断点击箭头到最终出现二维码的图像，拼接到一起就行了。</p><p>这道题考查了非常多的知识点，根本不像一道1★的题。。。<br>网上很多WP说A8 3C 74是rar对png的文件头编码，这种说法是错误的，做学问切忌一知半解！<br>很多专门针对CTF而编写的工具是我们日常生活中用不到的，要多收集整理此类工具并灵活运用<br>（吐槽：360压缩压根不提示你文件头损坏=_=…），好像7z也不提示emmm</p><p>将secret.png导入ps，就会在右下角看到图层1和图层2.然后分别导出png格式。然后用stegsolve就可以找到二维码的上半部分和下半部分。然后截两张图片。截图有个小细节要注意，<b>下半部分的不要留空格，</b>要不会扫不出来（我就是这样。。）<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-07-122330.gmz0l3e4an4.png"                      alt="lyh"                ><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-07-123209.6tdbj9eke9k0.png"                      alt="lyh"                ><br>用画图补全二维码图片应该都会吧，不再赘述了。手机微信扫一下就出来了。</p><p>#base64stego</p><p>打开stegoo.txt，将内容全部复制下来，强行解密，发现解不了。与是用python文本来解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line">a = open(<span class="string">&quot;stego.txt&quot;</span>, <span class="string">&quot;rt&quot;</span>)</span><br><span class="line">b = a.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    c = base64.b64decode(i.encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">    data.append(c)</span><br><span class="line">a.close()</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">m=open(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    m.write(i)</span><br><span class="line">m.close()</span><br></pre></td></tr></table></figure><p>将生成的flag.txt打开，得到一堆字符串<br>补充：我用的360压缩，能直接打开。但是看网上的wp发现有的还要密码。emmm（360压缩是真强大啊）。所以我就把压缩包也解一下密，供需要的小伙伴看~</p><p>zip伪加密<br>一个zip文件由三部分组成：压缩源文件数据区，压缩源文件目录区，压缩源文件目录结束标志。</p><p>伪加密原理：zip伪加密是在文件头中加密标志位做修改，然后在打开时误被识别为加密压缩包。</p><p>压缩源文件数据区：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-09-145053.rgles831kuo.png"                      alt="lyh"                ></p><p>50 4B 03 04：头文件标记<br>14 03：解压文件所需 pkware 版本<br>00 00：全局方式位标记（判断有无加密的重要标志）<br>08 00：压缩方式<br>68 BF：最后修改文件的时间<br>9B 48：最后修改文件的日期<br>FE 32 7D 4B：CRC-32校验<br>E9 0D 00 00：压缩后尺寸<br>B5 1B 00 00：未压缩尺寸<br>09 00：文件名长度<br>00 00：扩展记录长度</p><p>压缩源文件目录区：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-09-150613.33bll1pbhm00.png"                      alt="lyh"                ></p><p>50 4B 01 02：目录中文件文件头标记<br>3F 03：压缩使用的 pkware 版本<br>14 03：解压文件所需 pkware 版本<br>09 00：全局方式位标记（有无加密的重要标志，这个更改这里进行伪加密，改为00 00打开不会提示要密码了）<br>08 00：压缩方式<br>68 BF：最后修改文件的时间<br>9B 48：最后修改文件的日期<br>FE 32 7D 4B：CRC-32校验<br>E9 0D 00 00：压缩后尺寸<br>B5 1B 00 00：未压缩尺寸<br>09 00：文件名长度<br>24 00：扩展字段长度<br>00 00：文件注释长度<br>00 00：磁盘开始号<br>00 00：内部文件属性<br>20 80 ED 81：外部文件属性<br>00 00 00 00：局部头部偏移量</p><p>压缩源文件目录结束标志：</p><p>50 4B 05 06：目录结束标记<br>00 00：当前磁盘编号<br>00 00：目录区开始磁盘编号<br>01 00：本磁盘上纪录总数<br>01 00：目录区中纪录总数<br>5B 00 00 00：目录区尺寸大小<br>10 0E 00 00：目录区对第一张磁盘的偏移量<br>00 00：ZIP 文件注释长度</p><p>判断是否加密：</p><p>无加密：<br>压缩源文件数据区的全局加密应当为00 00<br>压缩源文件目录区的全局方式位标志应当为00 00</p><p>伪加密<br>压缩源文件数据区的全局加密应当为00 00<br>压缩源文件目录区的全局方式位标志应当为09 00</p><p>真加密<br>压缩源文件数据区的全局加密应当为09 00<br>压缩源文件目录区的全局方式位标记应当为09 00</p><p>使用winhex打开压缩包，根据观察这个文件使用了伪加密，所以将压缩源文件目录区的全局方式位改为00 00保存即可解压<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-09-150416.v4mux6f4tls.png"                      alt="lyh"                ></p><p>学问莫要做到一知半解。应该刨根问底！</p><p>base64解码原理</p><p>base64编码用64个ascii字符作为基础来编码二进制内容。编码后的数据是一个字符串，包含的字符位：A-Za-z0-9+/共64个字符，其中=是填充字符。</p><p>编码规则：把3个8位字节转化为4个6位字节，再根据每个字节的值，用base64编码表中的值替换，不足4个字节的，补“=”，编码得到的字符串长度必为4的倍数。</p><p>编码步骤：<br>1.将待编码字符串各个字符转换为ASCII值<br>2.将得到的ASCII值转换为8位二进制<br>3.将得到的8位二进制字符串分割位6位一组（不足6位的末尾添0补上）<br>4.将每个6位二进制数列转换为十进制。（6位二进制最大值位63：111 111）<br>5.将转换得到的十进制值按照对应的base64编码表中的字符进行替换一下<br>6. 若编码后所得字符串长不是4的倍数。添加一个或者两个“=”补上i即可。  </p><p>当编码的文本字节数是3的倍数时，刚好可以编码位4个字符<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-09-152856.29ngmtomx11c.png"                                     ></p><p>编码的文本字节数不是3的倍数时，剩下1个字符时<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-09-152922.356nj0ijc340.png"                                     ></p><p>编码的文本字节数不是3的倍数时，剩下2个字符时<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-09-152909.m1ft1x95uz4.png"                                     ></p><p>解码步骤：<br>1.将待解码字符串中的字符对应查找base64编码表中的序列值（末尾的“=”直接忽略）<br>2.将所得对应序列值转换为6位二进制字符串<br>3.将所有6位二进制字符串从左往右按8位分割（多的是补的0所以直接丢掉并不会影响数据还原结果）<br>4.将每个8位二进制字符串转换位十进制<br>5.再将十进制转换位对应的ASCII字符串即可。   </p><p>base64隐写原理<br>它之所以能够进行信息的隐藏，原因就在于解码时的第三步，会有部分多余数据被丢弃，而且这些数据是我们进行补充的0，那要是我们不全用0进行补充，而是用1或者0进行填充（二进制），这样就可以隐藏信息了。<br>提取信息的话，将我们填充进去的数据拿出来然后组成一串二进制字符串进行转码即可。由于一串base64编码最多只有4bit的隐写空间，所以实现隐写需要大量的编码串。</p><p>下面是脚本</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#如来十三掌&lt;br&gt;打开网址,发现有如下文字&lt;br&gt;如来十三掌&lt;br&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                  </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界题解（专题）</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-11-29T15:07:44.000Z</published>
    <updated>2021-12-09T07:17:53.572Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://xpoet.cn/2020/04/Keep-%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/" >Keep主题配置<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://markdown.com.cn/" >markdown教程<i class="fas fa-external-link-alt"></i></a>。<br>#攻防世界题解<br>misc：<a href="/2021/12/06/misc/" title="[misc]">[misc]</a>       </p>/2021/11/28/hello-world/       <a href="/2021/11/28/hello-world/" title="[hello-world]">[hello-world]</a>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://xpoet.cn/2020/04/Keep-%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/&quot; &gt;Keep主题配置&lt;i class=&quot;fas fa-</summary>
      
    
    
    
    
    <category term="11" scheme="https://yyhhhhhhhhh.github.io/tags/11/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/11/28/hello-world/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/11/28/hello-world/</id>
    <published>2021-11-28T15:19:27.176Z</published>
    <updated>2021-11-28T15:19:27.176Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;! This is your very first post. Che</summary>
      
    
    
    
    
  </entry>
  
</feed>
