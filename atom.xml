<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://yyhhhhhhhhh.github.io/atom.xml" rel="self"/>
  
  <link href="https://yyhhhhhhhhh.github.io/"/>
  <updated>2021-12-06T14:01:06.682Z</updated>
  <id>https://yyhhhhhhhhh.github.io/</id>
  
  <author>
    <name>Lyh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>misc</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/12/06/misc/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/12/06/misc/</id>
    <published>2021-12-06T03:33:16.000Z</published>
    <updated>2021-12-06T14:01:06.682Z</updated>
    
    <content type="html"><![CDATA[<p>#如来十三掌<br>打开网址,发现有如下文字<br>如来十三掌<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-111219.3b85s295jta0.png"                      alt="wochao"                ><br>，打开<a class="link"   href="https://www.keyfc.net/bbs/tools/tudoucode.aspx" >与佛论禅<i class="fas fa-external-link-alt"></i></a>.然后注意要加上佛曰：或如是我闻：，冒号都是中文的。复制放在下面的文本框里。得到一行代码：MzkuM3gvMUAwnzuvn3cgozMlMTuvqzAenJchMUAeqzWenzEmLJW9<br>然后发现这行代码有大小写字母还有数字，同时长度也是4的倍数。base64直接解密。十三也可能会导致往rot13方向想。<br>base64的特征：base64由大写字母（A-Z），小写字母（a-z），数字（0-9），+/组成。如果字符不足会用=补齐，特征很明显。</p><p>#give you flag<br>打开文件，发现后缀是gif动图，然后用stegsolve（图片隐写神器）打开<br><a class="link"   href="http://www.caesum.com/handbook/Stegsolve.jar" >stegsolve下载地址<i class="fas fa-external-link-alt"></i></a>这个是需要安装Java，然后配置环境变量才能使用的。具体网上自己搜吧。。</p><p>然后用stegsolve打开，点击Analyse，使用Frame Browser动图分解，发现如下二维码<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-105143.7fosbjtc2c80.png"                      alt="wochao"                ><br>使用画图软件<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/21107801-62284a54709b2ac5.40wu3gocd7q0.webp"                      alt="111"                >补一下就行，我的画图升到win11了，画图不太好用。。。</p><p>然后是一点二维码的知识<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-04-225406.5xmqsd8xl0k0.png"                      alt="222"                ><br><a class="link"   href="https://blog.csdn.net/ajianyingxiaoqinghan/article/details/78837864" >二维码的一些知识，想看的可以看看<i class="fas fa-external-link-alt"></i></a></p><p>#stegano<br>stegano<br>打开附件，发现是一个pdf文件<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/Lyhz.2j833jjppnc0.png"                      alt="stegano"                ><br>然后就发现和招新赛那个题很像。ctrl+A全选，复制到word里面，</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-095214.24kwr33jn28w.png"                      alt="stgano"                ></p><p>然后就发现AB的字符串。首先想到的是培根密码，但是培根密码都是五个一组来替换的。又想到了摩斯密码，有两种情况，将A替换成.B替换成-或者反过来。<br>（替换可以使用word里面的替换功能，我以前笨的一个个换的害）<br>放入<a class="link"   href="http://moersima.00cha.net/" >摩斯密码在线解密网站即可<i class="fas fa-external-link-alt"></i></a><br>flag就不放了。</p><p>反思：密密麻麻的给我一种凯斯密码的错觉。。</p><p>#坚持60s<br>思路：</p><p>打开文件发现是一个小游戏，我们可以通过某些手段通关或者分析游戏文件来获得flag（我还玩了几把这个。）</p><p>知识点：<br>考察对jar文件的反编译能力</p><p>用360压缩打开附件<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-105852.38t49ebf23w0.png"                      alt="1"                ><br>用IDEA打开PlaneGameFrame类</p><p>发现如下代码<img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-110145.69brxy2bis40.png"                      alt="2"                ><br>显然是base64解密，<a class="link"   href="https://base64.supfree.net/" >base64加解密<i class="fas fa-external-link-alt"></i></a>即可。</p><p>反思：<br>反编译能力，这个类就是通过switch来判断坚持的时长，所以找到源码即可解密。</p><p>#gif<br>下载压缩包打开，发现有104张图片<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-111557.gye79nlxhlk.png"                      alt="3"                ><br>然后用winhex查看一下图片的代码<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-123647.19y0irgy054w.png"                      alt="l"                ><br>发现都是jpg形式，然后观察到颜色只有两个，就想到了密码，因为我感觉misc好多与密码相关的。自然而然就想到了密码。只有两种编码，就想到了0和1.而且图片有104张，刚好是8的倍数！</p><p>然后通过python脚本把图片识别出来<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-132439.6e71il6ifow0.png"                      alt="y"                ><br>得到字符串01100110011011000110000101100111011110110100011001110101010011100101111101100111011010010100011001111101<br>然后放到二进制转文本（其实还是要八个一组十六进制转文本）<br>注意两串数之间只能有一个空格<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-132838.2vpdl05zzo00.png"                      alt="h"                ></p><p>#掀桌子<br>首先打开题目，发现只给了一串密文，所以肯定是密码方面的让我们解密的c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2</p><p>观察密文特征，有0-9，a-f，不难猜测与十六进制有关。我们又知道两位十六进制可以显示一个字节（）,所以可以通过脚本显示ASCII码<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-151544.55685352mhc0.png"                      alt="l"                ><br>但是的出来的却是这个Èé¬ ÆòåóèÄïç¡ Ôèå æìáç éóº èêúãùäêúâêäãêëúëãõçéóäãèêùêóâäæò。。查了一下ASCII码，发现是128以后的。。而ASCII码的范围是0-127，所以对128取余。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-05-151851.x5znvrslopc.png"                                     ><br>即可得到flag。</p><p>通过这道题，我学到了ASCII码。我们用到的ASCII码一般都是0-127即7位的ASCII码，但是128-255是一些扩展型的ASCII码。学到了学到了。</p><p>#ext3<br><font color=Blue><br>先看题目的描述，linux系统光盘，所以这应该就是一个Linux文件，flag肯定就藏在其中。用360压缩打开该文件</font><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-193722.6lgyfgj7d8w0.png"                      alt="1"                ><br>直接搜索flag就找到了flag.txt..<br>打开得到ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0=<br><a class="link"   href="http://tool.chinaz.com/Tools/Base64.aspx" >base64解码<i class="fas fa-external-link-alt"></i></a>即可。我看网上其他wp好像都挺复杂的。。还是我懂得太少了，一题多解多发散！</p><p>反思<br>有关Linux文件系统的题不一定要用Linux系统环境来做，Windows照样可以做。</p><p>#SimpleRaR<br>orz,这种题型实在没头绪（指该去大佬的blog取精了hh）第一篇blog用的WinRAR会提示压缩包里面有损坏的文件，但是3608行。。这时候就该用到我们的winHex神器啦！（自行百度下载）</p><p>这里说明一下winhex的用处。winhex是一个专门用来对付各种日常紧急情况的工具。（说了和没说一样。）<br>它可以用来检查和修复各种文件，恢复删除文件，硬盘损坏造成的数据丢失等。同时它还可以让你看到其他程序隐藏起来的文件和数据（比如图片隐藏）</p><p>用winHex打开压缩包，<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/yyhhhhhhhhh/image-folder@master/20211205/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2021-12-06-193722.6lgyfgj7d8w0.png"                      alt="lyh"                >如果眼睛不好使看不到secret.png的话，就CTRL+f搜索吧（搜索png）。然后flag.txt结束之后就是png的文件了。应该是A8 3C 7A（从别人的wp看到的hh）。这里我们就要修复这个png文件了，涉及到RAR的文件结构，从网上找的，（如果有侵权请联系我，我立马删除！）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#如来十三掌&lt;br&gt;打开网址,发现有如下文字&lt;br&gt;如来十三掌&lt;br&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                  </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界题解（专题）</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-11-29T15:07:44.000Z</published>
    <updated>2021-12-06T03:56:14.383Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://xpoet.cn/2020/04/Keep-%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/" >Keep主题配置<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://markdown.com.cn/" >markdown教程<i class="fas fa-external-link-alt"></i></a>。<br>#攻防世界题解<br>misc：<a href="/2021/12/06/misc/" title="[misc]">[misc]</a></p>/2021/11/28/hello-world/<a href="/2021/11/28/hello-world/" title="[hello-world]">[hello-world]</a><a href="/2021/12/06/misc/" title="[misc]">[misc]</a>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://xpoet.cn/2020/04/Keep-%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/&quot; &gt;Keep主题配置&lt;i class=&quot;fas fa-</summary>
      
    
    
    
    
    <category term="11" scheme="https://yyhhhhhhhhh.github.io/tags/11/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yyhhhhhhhhh.github.io/2021/11/28/hello-world/"/>
    <id>https://yyhhhhhhhhh.github.io/2021/11/28/hello-world/</id>
    <published>2021-11-28T15:19:27.176Z</published>
    <updated>2021-11-28T15:19:27.176Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;! This is your very first post. Che</summary>
      
    
    
    
    
  </entry>
  
</feed>
